body {
    background-color: var(--backgroundColor);
}

.user_page {
    --itchio_font_family: Inter;
    --itchio_link_color: #D1D1D6;
    --itchio_gray_back: #f2f2f2;
    --itchio_border_radius: 10px;
    color: var(--textColor);
    font-size: 150%;
    font-family: Inter, Lato, LatoExtended, sans-serif;
}

.user_page hr {
    margin-top: 3em;
    margin-bottom: 3em;
    background-color: var(--highlightColor);
}

.user_page .user_links .svgicon {
    fill: #000000
}

.user_page_wrap {
    /*! */
    /* */
}

.user_page .user_links>* {
    margin: auto;
}

.header .image_header img {
    /*! */
    nil;
    /* */
}

.user_page .game_column,
.user_page .purchased_games,
.user_page .collection_row {
    border-color: #d8d8d8;
}

.footer {
    border-color: #d8d8d8
}

.game_grid_widget .game_cell .game_thumb,
.game_grid_widget .game_cell .gif_overlay {
    border-radius: 10px
}

.game_grid_widget .game_cell .game_title a.title {
    color: #D1D1D6;
}

.game_grid_widget .game_cell .web_flag {
    color: #000000;
    background: #d8d8d8
}

.game_grid_widget .game_cell .game_text,
.game_grid_widget .game_cell .game_author {
    color: rgba(0, 0, 0, 0.75);
    white-space: normal;
}

.game_grid_widget .game_cell .game_platform,
.game_grid_widget .game_cell .game_genre {
    color: rgba(0, 0, 0, 0.5)
}

/*Custom css*/

:Root {
    --textColor: #000000;
    --linkColor: #007AFF;
    --loveColor: #FF3B30;
    --musicColor: #34C759;
    --highlightColor: #000000;
    --backgroundColor: #ffffff;
    --semiBackgroundColor: #ffffff;
    --shadow: #00000040;
    --rotationAmount0: -0.75deg;
    --rotationAmount1: 1.5deg;
    --rotationAmount2: -2.25deg;
    --rotationAmount3: 3deg;

    --color0: #FF3B30;
    --color1: #FF9500;
    --color2: #FFCC00;
    --color3: #34C759;
    --color4: #007AFF;
    --color5: #FF2D55;

    --rounding: 15px;
}

html {
    scroll-behavior: smooth;
}

.profile_banner {
    transition: all 0.1s ease-in-out;
    filter: drop-shadow(0 0 0 var(--highlightColor));
    transform: rotate(0deg);
}

.user_page a,
.footer a {
    color: var(--linkColor);
}

.game_grid_widget .game_cell .game_title a.title {
    color: var(--textColor);
}

img {
    border-radius: 10px;
}

strong>img {
    border-radius: 10px;
    width: 100%;
    height: auto;
    object-fit: cover;
}

.header {
    text-align: center;
}

.text_header > iframe {
    height: 9em; 
    width: 100%; 
    max-width: 960px; 
}

iframe {
    border-radius: var(--rounding);
}

/*.text_header:after {
    content: "/ˋₒ‸ₒ´\\ˢᵗᵘᵖⁱᵈ⁺⁺";
    display: block;
    font-size: 2em;
    margin-top: 0.67em;
    margin-bottom: 0.67em;
    margin-left: 0;
    margin-right: 0;
    font-weight: bold;
    cursor: pointer;
    color: var(--highlightColor);
}*/

figure {
    border-radius: var(--rounding);

    transition: all 0.1s ease-in-out;
}

figcaption {
    text-align: center;
    font-weight: bold;
}

blockquote {
    border-left: 4px solid var(--semiBackgroundColor);
    padding: 0 15px;
    padding-right: 0;
    margin: 0.8em 0;
    margin: 1rem 0px; 
    color: #777777;
}

.inline_icon {
    height: 1em;
    vertical-align: baseline;
}

.user_page .mlemrecords {
    text-decoration: none;
    color: var(--textColor);
}

.game_grid_widget .game_cell .web_flag {
    background: var(--highlightColor);
}

.game_cell {
    border-radius: var(--rounding);
    padding: calc(var(--rounding) / 2);
}

.game_grid_widget .game_cell .game_thumb, .game_grid_widget .game_cell .gif_overlay {
    border-radius: calc(var(--rounding) / 2);
}

.mode_grid .user_game_grid {
    --itchio_grid_gap: 20px;
    --itchio_grid_cell_width: calc(50% - 10px);
    --itchio_grid_cell_columns: 3;
    grid-template-columns: repeat(2, calc(50% - 10px));
}

@media only screen and (max-width: 768px) {
    .mode_grid .user_game_grid {
    --itchio_grid_gap: 20px;
    --itchio_grid_cell_width: 100%;
    --itchio_grid_cell_columns: 1;
    grid-template-columns: repeat(1, 100%);
}
}

.mode_grid .timeline_grid {
    --itchio_grid_gap: 20px;
    --itchio_grid_cell_width: 100%;
    --itchio_grid_cell_columns: 1;
    grid-template-columns: repeat(1, 100%);
}

.foot {
    color: var(--highlightColor);
    text-align: center;
}

.webring {
    display: flex;
    flex-direction: row;
    justify-content: space-between;
    align-items: last baseline;

    text-align: center;
}

.game_grid_widget.game_list {
    --itchio_grid_gap: 20px;
    --itchio_grid_cell_width: 225px;
    --itchio_grid_cell_columns: 4;
    grid-template-columns: repeat(4, 225px);
    word-wrap: break-word;
}

.mode_grid .user_game_grid .game_cell .game_thumb {
    width: 291px;
    height: 231px;
}

.mode_grid .user_game_grid .game_cell {
    width: 50%;
}

.mode_grid .user_game_grid .game_cell .game_thumb {
    width: auto;
    height: auto;
}

.mode_grid .user_game_grid .game_cell {
    width: auto;
}

.time_stamp {
    margin-left: auto; 
    margin-right: 0;
    float: right;
}

*:is(span, .game_thumb, .game_title, .game_text, p, b, h1, h2, h3, h4, h5, h6):nth-of-type(2n - 1) {
    counter-increment: allRot;
    transform: rotate(calc(-1 * var(--rotationAmount0)));
}

*:is(span, .game_thumb, .game_title, .game_text, p, b, h1, h2, h3, h4, h5, h6):nth-of-type(2n + 2) {
    counter-increment: allRot;
    transform: rotate(calc(-1 * var(--rotationAmount1)));
}

*:is(span, .game_thumb, .game_title, .game_text, p, b, h1, h2, h3, h4, h5, h6):nth-of-type(2n + 3) {
    counter-increment: allRot;
    transform: rotate(calc(-1 * var(--rotationAmount2)));
}

*:is(span, .game_thumb, .game_title, .game_text, p, b, h1, h2, h3, h4, h5, h6):nth-of-type(2n + 4) {
    counter-increment: allRot;
    transform: rotate(calc(-1 * var(--rotationAmount3)));
}

*:is(span, .game_thumb, .game_title, .game_text, p, b, h1, h2, h3, h4, h5, h6):nth-of-type(2n + 5) {
    counter-increment: allRot;
    transform: rotate(calc(var(--rotationAmount0)));
}

*:is(span, .game_thumb, .game_title, .game_text, p, b, h1, h2, h3, h4, h5, h6):nth-of-type(2n + 6) {
    counter-increment: allRot;
    transform: rotate(calc(var(--rotationAmount1)));
}

*:is(span, .game_thumb, .game_title, .game_text, p, b, h1, h2, h3, h4, h5, h6):nth-of-type(2n + 7) {
    counter-increment: allRot;
    transform: rotate(calc(var(--rotationAmount2)));
}